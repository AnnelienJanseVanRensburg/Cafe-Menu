Step 1:
Every HTML document should have a DOCTYPE declaration and html element. The DOCTYPE tells the browser which version of HTML the document is in. And the html element represents the root element which contains all other elements.

Example Code:
<!DOCTYPE html>
<html lang="en">
--all other elements go here--
</html>

Add the <!DOCTYPE html> tag, and an html element with a lang attribute of en.


Step 2:
Add a head element within the html element, so you can add a title element. The title element's text should be Cafe Menu.
The title is one of several elements that provide extra information not visible on the web page, but it is useful for search engines or how the page gets displayed.


Step 3:
Inside the head element, nest a meta element with an attribute named charset set to the value utf-8 to tell the browser how to encode characters for the page.


Step 4:
To prepare to create some actual content, add a body element below the head element.


Step 5:
It's time to add some menu content. Add a main element within the existing body element. It will eventually contain pricing information about coffee and desserts offered by the cafe.


Step 6:
The name of the cafe is CAMPER CAFE. Add an h1 element within your main element. Give it the name of the cafe in capitalized letters to make it stand out.


Step 7:
To let visitors know the cafe was founded in 2020, add a p element below the h1 element with the text Est. 2020.


Step 8:
There will be two sections on the menu, one for coffees and one for desserts. Add a section element within the main element so you have a place to put all the coffees available.


Step 9:
Create an h2 element in the section element and give it the text Coffee.


Step 10:
Up until now, you have been limited regarding the presentation and appearance of the content you create. To start taking control, add a style element within the head element.


Step 11:
You can add style to an element by specifying it in the style element and setting a property for it like this:

element {
  property: value;
}

Center the content of the h1 element by setting its text-align property to the value center.


Step 12:
In the previous step, you used a type selector to style the h1 element. Center the content of the h2 and the p elements by adding a new type selector for each one to the existing style element.


Step 13:
Delete the three existing type selectors and replace them with one selector list that centers the text for the h1, h2, and p elements.


Step 14:



Step 15:
Now that you have the CSS in the styles.css file, go ahead and remove the style element and all its content. Once it is removed, the text that was centered will shift back to the left.


Step 16:
Now you need to link the styles.css file, so the styles will be applied again. Inside the head element, add a link element. Give it a rel attribute with the value of "stylesheet" and a href attribute with the value of "styles.css".


Step 17:



Step 18:



Step 19:



Step 20:



Step 21:



Step 22:



Step 23:



Step 24:



Step 25:



Step 26:
Step 27:
Step 28:
Step 29:
Step 30:
Step 31:
Step 32:
Step 33:
Step 34:
Step 35:
Step 36:
Step 37:
Step 38:
Step 39:
Step 40:
